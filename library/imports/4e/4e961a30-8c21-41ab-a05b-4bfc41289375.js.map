{"version":3,"sources":["assets\\scripts\\SpriteIndex.js"],"names":["cc","Class","Component","editor","CC_EDITOR","requireComponent","Sprite","properties","spriteFrames","SpriteFrame","_index","index","type","Integer","get","set","value","length","sprite","node","getComponent","spriteFrame","next","randomNum","minNum","maxNum","arguments","parseInt","Math","random"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACN,aAASD,EAAE,CAACE,SADN;AAC+B;AACrCC,EAAAA,MAAM,EAAEC,SAAS,IAAI;AACjBC,IAAAA,gBAAgB,EAAEL,EAAE,CAACM,MADJ,CACgB;;AADhB,GAFf;AAIDC,EAAAA,UAAU,EAAE;AACbC,IAAAA,YAAY,EAAE,CAACR,EAAE,CAACS,WAAJ,CADD;AACoB;AACjCC,IAAAA,MAAM,EAAE,CAFK;AAEoB;AAEjCC,IAAAA,KAAK,EAAE;AAA0B;AAC7BC,MAAAA,IAAI,EAAEZ,EAAE,CAACa,OADN;AAC0B;AAC7B;AACAC,MAAAA,GAHG,iBAGG;AACF,eAAO,KAAKJ,MAAZ;AACH,OALE;AAMF;AACAK,MAAAA,GAPE,eAOEC,KAPF,EAOS;AACR,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACV;AACJ,SAHO,CAIP;;;AACD,aAAKN,MAAL,GAAcM,KAAK,GAAG,KAAKR,YAAL,CAAkBS,MAAxC,CALQ,CAMP;;AACD,YAAIC,MAAM,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBpB,EAAE,CAACM,MAA1B,CAAb,CAPQ,CAQP;;AACDY,QAAAA,MAAM,CAACG,WAAP,GAAqB,KAAKb,YAAL,CAAkB,KAAKE,MAAvB,CAArB;AACH;AAjBE;AAJM,GAJX;;AA4BN;;;;AAIAY,EAAAA,IAhCM,kBAgCC;AACF,SAAKX,KAAL,GAAWY,SAAS,CAAC,CAAD,EAAG,CAAH,CAApB,CADE,CACyB;AAC/B;AAlCK,CAAT,GAoCA;;AACA,SAASA,SAAT,CAAmBC,MAAnB,EAA0BC,MAA1B,EAAiC;AAC7B,UAAOC,SAAS,CAACT,MAAjB;AACI,SAAK,CAAL;AACI,aAAOU,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAcL,MAAd,GAAqB,CAAtB,EAAwB,EAAxB,CAAf;AACJ;;AACA,SAAK,CAAL;AACI,aAAOG,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAeJ,MAAM,GAACD,MAAP,GAAc,CAA7B,IAAgCA,MAAjC,EAAwC,EAAxC,CAAf;AACJ;;AACI;AACI,aAAO,CAAP;AACJ;AATR;AAWH","sourceRoot":"/","sourcesContent":["cc.Class({\r\n   extends: cc.Component,               //编辑器属性，只在编辑状态有效\r\n   editor: CC_EDITOR && {\r\n       requireComponent: cc.Sprite,     //要求节点必须有cc.Sprite组件\r\n   },   properties: {\r\n       spriteFrames: [cc.SpriteFrame],  //定义一个SpriteFrames数组\r\n       _index: 0,                       //以下划线“_”开始的为私用变量\r\n\t\t\r\n       index: {                         //index属性控制图片切换\r\n           type: cc.Integer,            //定义属性为整数类型\r\n           //这次没使用notify方式实现属性值的变化监听，改用getter/setter方式\r\n           get() {                          \r\n               return this._index;\r\n           },\r\n            //为负数退出 \r\n            set(value) {                \r\n               if (value < 0) {                    \r\n                    return;\r\n               }                \r\n                //根据spriteFrames组件长度计算this._index\r\n               this._index = value % this.spriteFrames.length;                \r\n                //获取当前节点上的Sprite组件对象\r\n               let sprite = this.node.getComponent(cc.Sprite);                \r\n                //设置Sprite组件的spriteFrame属性，变换图片\r\n               sprite.spriteFrame = this.spriteFrames[this._index];\r\n           },\r\n       }\r\n   },    \r\n   /**\r\n   *next方法，调用index++切换图片，\r\n   *可以方便被cc.Button组件的事件调用\r\n   */\r\n   next() {        \r\n        this.index=randomNum(0,5); //调用自身index属性，编号+1\r\n   }\r\n});\r\n//生成从minNum到maxNum的随机数\r\nfunction randomNum(minNum,maxNum){ \r\n    switch(arguments.length){ \r\n        case 1: \r\n            return parseInt(Math.random()*minNum+1,10); \r\n        break; \r\n        case 2: \r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10); \r\n        break; \r\n            default: \r\n                return 0; \r\n            break; \r\n    } \r\n} "]}